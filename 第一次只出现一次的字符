/**
 * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
 *
 * 
 * @param str string字符串 
 * @return int整型
 */
int FirstNotRepeatingChar(char* str ) {
    // write code here
    //第一种根据hash的思想来寻找
    int len='z'-'A'+1;
    int *hash=(int *)calloc(len,sizeof(int));
    int len_str=strlen(str);
    int i=0;
    int j=0;
    for(i=0;i<len_str;i++){
        hash[str[i]-'A']+=1;
    }
    for(j=0;j<len_str;j++){
       if(hash[str[j]-'A']==1)
          return j;
    }
    return -1;
    // //第二种 仅仅只依赖于遍历
    // int len=strlen(str);
    // int *arr=(int *)malloc(sizeof(int)*len);
    // int i=0;
    // int j=0;
    // int count=0;
    // for(i=0;i<len;i++){
    //     count=0;
    //     for(j=0;j<len;j++){
    //         if(str[i]==str[j]){
    //             count++;
    //         }
    //     }
    //     arr[i]=count;
    // }
    // int k=0;
    // for(k=0;k<len;k++){
    //     if(arr[k]==1)
    //        return k;
    // }
    // return -1;
}
