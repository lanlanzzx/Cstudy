
/**
 * 
 * @param numbers int整型一维数组 
 * @param numbersLen int numbers数组长度
 * @return bool布尔型
 */
int int_cmp(const void* e1, const void* e2)
{
    return *(int*)e1 - *(int*)e2;//升序排序
}
bool IsContinuous(int* numbers, int numbersLen ) {
    // write code here
    qsort(numbers, numbersLen, sizeof(numbers[0]), int_cmp);
    int *hash=(int *)calloc(13,sizeof(int));
    int i=0;
    for(i=0;i<numbersLen;i++){
        if(numbers[i]!=0)
          break;
    }//i表示一共有多少个0
    int j=i;
    for(j=i;j<numbersLen;j++){
         hash[numbers[j]]+=1;
    }
    for(j=i;j<numbersLen;j++){
         if(hash[numbers[j]]>1)
            return false;
    }
    
    if(numbers[numbersLen-1]-numbers[i]+1-(numbersLen-i)>i)
       return false;
    return true;
}
