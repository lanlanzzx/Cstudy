int get_max(int a[],int length)
{
    int max = a[0];
    for(int i=1;i<length;i++)
    {
        if(a[i]>max)
            max = a[i];
    }
    return max;
}

void count_sort(int a[],int length,int exp)
{
    int output[length];
    int buckets[10] = {0};
    for( int i=0; i<length; i++)
    {
        buckets[(a[i]/exp)%10]++;
    }
    for(int i=1;i<10;i++)
    {
        buckets[i]+=buckets[i-1];
    }
    for( int i=length-1; i>=0; i--)
    //for(int i=0;i<length;i++)
    {
        output[buckets[(a[i]/exp)%10]-1]=a[i];
        buckets[(a[i]/exp)%10]--;
    }
    for(int i=0;i<length;i++)
    {
        a[i]=output[i];
    }
}

void total_sort(int a[],int length)
{
    int a_max = get_max(a, length);
    //printf("%d ",a_max);
    int exp;
    for(exp=1;a_max/exp>0;exp=exp*10)
    {
        count_sort(a, length,exp);
    }
}


int main()
{
    //int a[] = {53,3,542,748,14,214,154,63,616};
    int a[]={222,29,38,7,16,161,25,4};
    int a_len = sizeof(a)/sizeof(a[0]);
    //printf("%d ",a_len);
    for(int i=0;i<a_len;i++)
    {
        printf("%d ",a[i]);
    }
    printf("\n");
    total_sort(a, a_len);
    for(int i=0;i<a_len;i++)
    {
        printf("%d ",a[i]);
    }
    printf("\n");
    return 0;
}
